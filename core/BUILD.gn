# Copyright (c) 2023 The Mogu Authors.
# All rights reserved.
import("//testing/test.gni")

static_library("core") {
  defines = [
    "NOMINMAX",
    "USE_UNSTABLE_GEOS_CPP_API",
  ]

  sources = [
    "geometry/geometry.cpp",
    "sdb/sdb.cpp",
    # "command.cpp",
    # "dynamic_library.cpp",
    # "listener.cpp",
    # "plugin.cpp",
  ]

  include_dirs += [
    "$root_gen_dir/",
    "$root_out_dir/sqlite3/include",
    "$root_out_dir/glog/include",
    "$root_out_dir/geos/include",
    "$root_out_dir/PROJ/include",
    "$root_out_dir/gdal/include",
    "$root_out_dir/libspatialindex/include",
    "$root_out_dir/libspatialite/include",
    "$root_out_dir/spatial/include",
    "$root_out_dir/SpatiaLiteCpp/include",
  ]

  libs = [
    "$root_out_dir/sqlite3/lib/sqlite3.lib",
    "$root_out_dir/SQLiteCpp/lib/SQLiteCpp.lib",
    "$root_out_dir/geos/lib/geos.lib",
    "$root_out_dir/PROJ/lib/proj.lib",
    "$root_out_dir/gdal/lib/gdal.lib",
    "$root_out_dir/libspatialindex/lib/spatialindex-64.lib",
    "$root_out_dir/libspatialite/lib/spatialite_i.lib",
    "$root_out_dir/SpatiaLiteCpp/lib/SpatiaLiteCpp.lib",
  ]

  deps = [
    "//base:base",
    "//third_party:cpp-httplib",
    "//third_party:sqlite3",
    "//third_party:SQLiteCpp",
    "//third_party:geos",
    "//third_party:PROJ",
    "//third_party:gdal",
    "//third_party:libspatialindex",
    "//third_party:spatial",
    "//third_party:SpatiaLiteCpp",
  ]
}

test("core_test") {
  defines = [
    "NOMINMAX",
    "USE_UNSTABLE_GEOS_CPP_API",
  ]

  sources = [
    "core_unittest.cpp",
    "geometry/geometry_unittest.cpp",
    "sdb/sdb_unittest.cpp",
  ]

  include_dirs += [
    "$root_gen_dir/",
    "//third_party/expected/include/",
    "//third_party/msqlite/include",
    "$root_out_dir/sqlite3/include",
    "$root_out_dir/glog/include",
    "$root_out_dir/geos/include",
    "$root_out_dir/PROJ/include",
    "$root_out_dir/gdal/include",
  ]

  deps = [
    ":core",
  ]
}